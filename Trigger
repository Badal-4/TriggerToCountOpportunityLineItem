/*trigger trg5 on OpportunityLineItem (after insert,after Delete)
{
    Set<Id> accId = new Set<Id>();
    Set<Id> oppId = new Set<Id>();
    
    if(trigger.isAfter)
    {
        if(trigger.isInsert)
        {
            if(!trigger.new.isEmpty())
            {
                for(OpportunityLineItem ol : trigger.new)
                {
                    
                       oppId.add(ol.OpportunityId);
                    
                }
            }
        }
    
        if(trigger.isDelete)
        {
            if(!trigger.old.isEmpty())
            {
                for(OpportunityLineItem ol : trigger.old)
                {
                    
                       oppId.add(ol.OpportunityId);
                    
                }
            }
        }
    }
    if(!oppId.isEmpty())
    {
        List<Opportunity> oppList = [Select Id,AccountId from Opportunity where Id IN : oppId and AccountId != null];
        for(Opportunity op : oppList)
        {
            accId.add(op.AccountId);
        }
        
        List<AggregateResult> aggrList = [Select count(Id)oli,Opportunity.AccountId from OpportunityLineItem where Opportunity.AccountId IN : accId group by Opportunity.AccountId];
        List<Account> accList = new List<Account>();
        
        if(aggrList.size() > 0)
        {
            for(AggregateResult aggr : aggrList)
            {
                Account ac  = new Account();
                ac.Id = (Id)aggr.get('AccountId');
                ac.nop__c = (Decimal)aggr.get('oli');
                accList.add(ac);
            }
        }
        if(!accList.isEmpty())
        {
           update accList;
        }
    }
}*/ 
trigger trg5 on OpportunityLineItem (after insert,after Delete)
{
    Set<Id> oppId = new Set<Id>();
    Map<Id, Decimal> oppLineItemCount = new Map<Id, Decimal>();
    if(trigger.isAfter)
    {
        if(trigger.isInsert)
        {
            for(OpportunityLineItem ol : trigger.new)
            {
                oppId.add(ol.OpportunityId);
            }
        }
        if(trigger.isDelete)
        {
            for(OpportunityLineItem ol : trigger.old)
            {
                oppId.add(ol.OpportunityId);
            }
        }
    }
    if(!oppId.isEmpty())
    {
        List<Opportunity> oppList = [SELECT Id,AccountId FROM Opportunity WHERE Id IN :oppId];
        for(Opportunity op : oppList)
        {
            oppLineItemCount.put(op.AccountId, 0);
        }
        for(AggregateResult aggr : [SELECT COUNT(Id)oli, Opportunity.AccountId FROM OpportunityLineItem WHERE Opportunity.AccountId IN :oppLineItemCount.keySet() GROUP BY Opportunity.AccountId])
        {
            oppLineItemCount.put((Id)aggr.get('AccountId'), (Decimal)aggr.get('oli'));
        }
        try
        {
            List<Account> accList = new List<Account>();
            for(Id accountId : oppLineItemCount.keySet())
            {
                Account ac = new Account();
                ac.Id = accountId;
                ac.nop__c = oppLineItemCount.get(accountId);
                accList.add(ac);
            }
            update accList;
        }
        catch(Exception e)
        {
            //Add error handling here
        }
    }
}
